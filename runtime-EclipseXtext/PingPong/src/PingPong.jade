module example


agent Ping
    uses ontology PingPong 

    on create do
        log "Agent 'Ping' created."
        activate WaitFromPong
        activate SendRequest(0)


agent Pong
    uses ontology PingPong

    on create do
        log "Agent 'Pong' created."
        activate WaitAndReply


ontology PingPong
    predicate Received(id as integer)
    action Reply(id as integer)


cyclic behavior WaitAndReply 
    for agent Pong
    uses ontology PingPong 
    
    on message request Reply(id) do
        log "received '" + id + "' from agent '"
            + name of sender + "'"
        inform Received(id) to sender


one shot behavior SendRequest
    for agent Ping
    uses ontology PingPong
    
    property id as integer
    
    on create with id as integer do
        id of this = id
    
    on execute do
        log "sending '" + id + "'..."
        send message request Reply(id) to "Pong"@


cyclic behaviour WaitFromPong
    for agent Ping
    uses ontology PingPong
    
    on message inform Received(id) do
        log "received '" + id + "' from agent '" 
            + name of sender + "'"
        activate SendRequest(id+1) after "PT1S" as duration
